//=============================================================================
//
// ライフ(life.h)
// Author : 唐﨑結斗
// 概要 : ライフ生成を行う
//
//=============================================================================
#ifndef _LIFE_H_		// このマクロ定義がされてなかったら
#define _LIFE_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "object2D.h"

//=============================================================================
// ライフクラス
// Author : 唐﨑結斗
// 概要 : ライフ生成を行うクラス
//=============================================================================
class CLife : public CObject2D
{
public:
	//--------------------------------------------------------------------
	// ライフの状態の列挙型
	// Author : 唐﨑結斗
	// 概要 : ライフの状態の管理を行う
	//--------------------------------------------------------------------
	enum LIFE_STATE
	{
		STATE_NORMAL = 0,		// 通常
		STATE_INVALID,			// 無効
		STATE_ADDITION,			// 追加
		STATE_MAX				// 最大数
	};

	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	// ライフの生成
	static CLife *Create();

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	explicit CLife(int nPriority = CObject::PRIORITY_LEVEL3);
	~CLife() override;

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	HRESULT Init() override;								// 初期化
	void Uninit() override;									// 終了
	void Update() override;									// 更新
	void Draw() override;									// 描画
	void SetLifeState(LIFE_STATE lifeState);				// ライフの状態のセッター
	LIFE_STATE GetLifeState() { return m_lifeState; }		// ライフの状態の取得

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	LIFE_STATE m_lifeState;			// ライフの状態
};

#endif
