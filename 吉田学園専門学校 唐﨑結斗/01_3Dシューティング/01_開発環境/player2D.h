//=============================================================================
//
// 2Dプレイヤー(player2D.h)
// Author : 唐﨑結斗
// 概要 : 2Dプレイヤー生成を行う
//
//=============================================================================
#ifndef _PLAYER2D_H_		// このマクロ定義がされてなかったら
#define _PLAYER2D_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "object2D.h"

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CMove;

//=============================================================================
// 2Dプレイヤークラス
// Author : 唐﨑結斗
// 概要 : 2Dプレイヤー生成を行うクラス
//=============================================================================
class CPlayer2D : public CObject2D
{
public:
	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	static CPlayer2D *Create(void);				// 2Dプレイヤーの生成

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CPlayer2D();
	~CPlayer2D() override;

	//--------------------------------------------------------------------
	// オーバーライド関数
	//--------------------------------------------------------------------
	HRESULT Init() override;	// 初期化
	void Uninit() override;		// 終了
	void Update() override;		// 更新
	void Draw() override;		// 描画

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	D3DXVECTOR3 Move(void);		// 移動
	void Shot(void);			// 弾の発射

	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	CMove			*m_pMove;				// 移動クラスのインスタンス
	int				m_nCntShot;				// 弾発射までのカウント
	bool			m_bPressShot;			// 長押し弾を使用してるかどうか
	bool			m_bLockShot;			// 弾発射が可能かどうか
};

#endif


