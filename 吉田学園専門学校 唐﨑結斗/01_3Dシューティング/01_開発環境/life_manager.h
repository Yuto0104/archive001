//=============================================================================
//
// ライフマネージャークラス(life_manager.h)
// Author : 唐﨑結斗
// 概要 : ライフマネージャー生成を行う
//
//=============================================================================
#ifndef _LIFE_MANAGER_H_		// このマクロ定義がされてなかったら
#define _LIFE_MANAGER_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "object.h"

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CLife;

//=============================================================================
// ライフマネージャークラス
// Author : 唐﨑結斗
// 概要 : ライフマネージャー生成を行うクラス
//=============================================================================
class CLifeManager : public CObject
{
public:
	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	static CLifeManager *Create();			// ライフマネージャーの生成

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CLifeManager(int nPriority = CObject::PRIORITY_LEVEL3);
	~CLifeManager() override;

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	HRESULT Init() override;														// 初期化
	void Uninit() override;															// 終了
	void Update() override;															// 更新
	void Draw() override;															// 描画
	void SetPos(const D3DXVECTOR3 &pos) override;									// 位置のセッター
	void SetPosOld(const D3DXVECTOR3 &posOld) override { m_posOld = posOld; }		// 過去位置のセッター
	void SetRot(const D3DXVECTOR3 &rot) override;									// 向きのセッター
	void SetSize(const D3DXVECTOR3 &size) override;									// 大きさのセッター
	D3DXVECTOR3 GetPos() override { return m_pos; }									// 位置のゲッター
	D3DXVECTOR3 GetPosOld()  override { return m_posOld; }							// 過去位置のゲッター
	D3DXVECTOR3 GetRot()  override { return m_rot; }								// 向きのゲッター
	D3DXVECTOR3 GetSize()  override { return m_size; }								// 大きさのゲッター
	void UninitLifeAll();															// すべてのライフの終了
	void SetLife();																	// ライフのセッター

private:
	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	CLife				**m_pLife;			// ライフ
	D3DXVECTOR3			m_pos;				// 位置
	D3DXVECTOR3			m_posOld;			// 過去の位置
	D3DXVECTOR3			m_rot;				// 向き
	D3DXVECTOR3			m_size;				// 大きさ
	int					m_nLife;			// ライフ
	int					m_nAddLife;			// 追加ライフ
	int					m_nMaxLife;			// 最大ライフ
};

#endif


