//=============================================================================
//
// 3D追従バレットクラス(follow_bullet3D.h)
// Author : 唐﨑結斗
// 概要 : オブジェクト生成を行う
//
//=============================================================================
#ifndef _FOLLOW_BULLET3D_H_		// このマクロ定義がされてなかったら
#define _FOLLOW_BULLET3D_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CObject;

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "bullet3D.h"
#include "texture.h"

//=============================================================================
// 3D追従バレットクラス
// Author : 唐﨑結斗
// 概要 : 3D追従バレット生成を行うクラス
//=============================================================================
class CFollowBullet3D : public CBullet3D
{
public:
	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	static CFollowBullet3D *Create(void);				// 2Dオブジェクトの生成

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CFollowBullet3D();
	~CFollowBullet3D();

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	HRESULT Init() override;																				// 初期化
	void Uninit() override;																					// 終了
	void Update() override;																					// 更新
	void Draw() override;																					// 描画
	void SetTarget();																						// ターゲットの設定
	void SetCoefficient(const float fCoefficient) { m_fCoefficient = fCoefficient; }						// 減衰係数の設定
	void SetAddCoefficient(const float fAddCoefficient) { m_fAddCoefficient = fAddCoefficient; }			// 減衰係数の加算値の設定

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void Follow();				// 追従
	void AddCoefficient();		// 減衰係数の加算
	
	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	CObject *m_pTarget;				// 追従のターゲット
	float m_fCoefficient;			// 減衰係数
	float m_fAddCoefficient;		// 減衰係数の加算値
};

#endif





